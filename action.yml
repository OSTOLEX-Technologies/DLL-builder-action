name: 'Build and Publish DLLs'
description: 'Build DLL, pack as nuget and publish into registry'

inputs:
  token:
    description: 'PAT to registry'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Validate Secret Input
      run: |
        if (-not ${{ inputs.my_secret_input }}) {
          Write-Error "Error: Secret input 'my_secret_input' is required but not provided."
          exit 1
        }

    - name: Extract version from tag
      run: |
      $TAG="${{ github.ref_name }}"
      if (-not ($TAG -match '^v\d+\.\d+\.\d+.*?$')) {
        echo "Invalid tag format: $TAG"
        exit 1
      }
      $version=$TAG.Substring(1)
      echo "VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Extract repository
      run: |
      $repositoryFullName = "${{ github.repository }}"
      $repositoryName = ($repositoryFullName -split '/')[1]
      echo "REPO_NAME=$repositoryName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Checkout main repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ github.sha }}

        - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0'

          - name: Restore NuGet packages
            run: |
              dotnet nuget add source --username ${{ github.actor }} --password ${{ inputs.my_secret_input }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
              dotnet restore .\${{ env.REPO_NAME }}\${{ env.REPO_NAME }}.csproj
  
          - name: Build DLLs
            run: dotnet build -c Release

            - name: Pack NuGet package
            run: dotnet pack .\${{ env.REPO_NAME }}\${{ env.REPO_NAME }}.csproj -c Release /p:PackageVersion=${{ env.VERSION }}
    
          - name: Publish DLLs to GitHub Packages
            run: dotnet nuget push D:\a\${{ env.REPO_NAME }}\${{ env.REPO_NAME }}\${{ env.REPO_NAME }}\bin\Release\${{ env.REPO_NAME }}.${{ env.VERSION }}.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ inputs.my_secret_input }}
